@model PersonalPortfolio.Models.VisitorComments


@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>VisitorComments</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Comment, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Comment, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Comment, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Submit" class="btn btn-default" />
            </div>
        </div>
    </div>
}

    <div>
        @Ajax.ActionLink("Nevermind", "Contact", "Home", null, new AjaxOptions {UpdateTargetId = "commentOutput",
                                                                                                                                     InsertionMode = InsertionMode.Replace,
                                                                                                                                     HttpMethod = "GET"}, new {@class = "nav-link"})
    </div>

@section Scripts { <!-- Allows injection of script code into _layout.cshtml file -->
    @Scripts.Render("~/bundles/jqueryval")
}

@Scripts.Render("~/bundles/bootstrap")
